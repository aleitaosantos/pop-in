{"ast":null,"code":"import _classCallCheck from \"C:/Users/Alexandre/Documents/GitHub/lights-out/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Alexandre/Documents/GitHub/lights-out/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"C:/Users/Alexandre/Documents/GitHub/lights-out/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"C:/Users/Alexandre/Documents/GitHub/lights-out/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/Alexandre/Documents/GitHub/lights-out/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar _jsxFileName = \"C:\\\\Users\\\\Alexandre\\\\Documents\\\\GitHub\\\\lights-out\\\\src\\\\Cell.js\";\nimport React, { Component } from 'react';\nimport \"./Cell.css\";\n/** A single cell on the board.\n *\n * This has no state --- just two props:\n *\n * - flipCellsAroundMe: a function rec'd from the board which flips this\n *      cell and the cells around of it\n *\n * - isLit: boolean, is this cell lit?\n *\n * This handles clicks --- by calling flipCellsAroundMe\n *\n **/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Cell = /*#__PURE__*/function (_Component) {\n  _inherits(Cell, _Component);\n\n  var _super = _createSuper(Cell);\n\n  function Cell(props) {\n    var _this;\n\n    _classCallCheck(this, Cell);\n\n    _this = _super.call(this, props);\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Cell, [{\n    key: \"handleClick\",\n    value: function handleClick(evt) {\n      // call up to the board to flip cells around this cell\n      this.props.flipCellsAroundMe();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var classes = \"Cell\" + (this.props.isLit ? \" Cell-lit\" : \"\");\n      return /*#__PURE__*/_jsxDEV(\"td\", {\n        className: classes,\n        onClick: this.handleClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this);\n    }\n  }]);\n\n  return Cell;\n}(Component);\n\nexport default Cell;","map":{"version":3,"names":["React","Component","Cell","props","handleClick","bind","evt","flipCellsAroundMe","classes","isLit"],"sources":["C:/Users/Alexandre/Documents/GitHub/lights-out/src/Cell.js"],"sourcesContent":["import React, {Component} from 'react'\nimport \"./Cell.css\"\n\n\n/** A single cell on the board.\n *\n * This has no state --- just two props:\n *\n * - flipCellsAroundMe: a function rec'd from the board which flips this\n *      cell and the cells around of it\n *\n * - isLit: boolean, is this cell lit?\n *\n * This handles clicks --- by calling flipCellsAroundMe\n *\n **/\n\nclass Cell extends Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(evt) {\n    // call up to the board to flip cells around this cell\n    this.props.flipCellsAroundMe();\n  }\n\n  render() {\n    let classes = \"Cell\" + (this.props.isLit ? \" Cell-lit\" : \"\");\n\n    return (\n        <td className={classes} onClick={this.handleClick} />\n    )\n  }\n}\n\n\nexport default Cell"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,YAAP;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;IAEMC,I;;;;;EACJ,cAAYC,KAAZ,EAAmB;IAAA;;IAAA;;IACjB,0BAAMA,KAAN;IACA,MAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,+BAAnB;IAFiB;EAGlB;;;;WAED,qBAAYC,GAAZ,EAAiB;MACf;MACA,KAAKH,KAAL,CAAWI,iBAAX;IACD;;;WAED,kBAAS;MACP,IAAIC,OAAO,GAAG,UAAU,KAAKL,KAAL,CAAWM,KAAX,GAAmB,WAAnB,GAAiC,EAA3C,CAAd;MAEA,oBACI;QAAI,SAAS,EAAED,OAAf;QAAwB,OAAO,EAAE,KAAKJ;MAAtC;QAAA;QAAA;QAAA;MAAA,QADJ;IAGD;;;;EAjBgBH,S;;AAqBnB,eAAeC,IAAf"},"metadata":{},"sourceType":"module"}